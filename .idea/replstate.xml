<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ReplState" timestamp="1489350421612">{:repl-history {:ide [], :local [&quot;(def slave1 (roar.node/slave-node \&quot;slave1\&quot; \&quot;master\n\&quot;))&quot; &quot;(def slave1 (roar.node/slave-node \&quot;slave1\&quot; master))&quot; &quot;(def slave2 (roar.node/slave-node \&quot;slave2\&quot; master))&quot; &quot;(roar.node/write! master \&quot;kk\&quot; \&quot;kkk\&quot;)&quot; &quot;slave2&quot; &quot;(roar.node/read master \&quot;kk\&quot; \&quot;kkk\&quot;)&quot; &quot;(roar.node/read slave1 \&quot;kk\&quot; \&quot;kkk\&quot;)&quot; &quot;(roar.node/read slave1 \&quot;kk\&quot;)&quot; &quot;(roar.node/replicate-key! master \&quot;kk\&quot; \&quot;kkk\&quot;)&quot; &quot;(roar.node/read master \&quot;kk\&quot;)&quot; &quot;slave1&quot; &quot;(roar.node/add-slave! master slave1)&quot; &quot;(roar.node/add-slave! master slave2)&quot; &quot;roar.node/master&quot; &quot;roar.node/slave&quot; &quot;(roar.node/add-slave! roar.node/master roar.node/slave)&quot; &quot;roar.node.Master&quot; &quot;roar.node.master&quot; &quot;(defn master (roar.node/master-node \&quot;test\&quot;))&quot; &quot;(def\n  master (roar.node/master-node \&quot;test\&quot;))&quot; &quot;-&gt; @( master .add-slave! \n             )&quot; &quot;(def\n  slave (roar.node/slave-node \&quot;ss1\&quot;))&quot; &quot;-&gt; @( master .add-slave! slave)&quot; &quot;-&gt; master .add-slave! slave&quot; &quot;roar.node/add-slave! master slave&quot; &quot;(def\n  slave (roar.node/slave-node \&quot;ss1\&quot; master\n                              ))&quot; &quot;roar.node/write! master \&quot;ss\&quot; \&quot;sss\&quot;&quot; &quot;(roar.node/write! master \&quot;ss\&quot; \&quot;sss\&quot;)&quot; &quot;(roar.node/add-slave! master slave)&quot; &quot;(def master (roar.node/master-node \&quot;master\&quot;))&quot; &quot;(def slave (roar.node/slave-node \&quot;slave\&quot;))&quot; &quot;(roar.node/add-slave master slave)&quot; &quot;(def master (roar.node.node/master-node \&quot;master\&quot;))&quot; &quot;(def slave1 (roar.node.node/slave-node  \&quot;slave1\&quot;))&quot; &quot;(def slave2 (roar.node.node/slave-node  \&quot;slave2\&quot;))&quot; &quot;(roar.node.node/add-slave! master slave1 )&quot; &quot;(roar.node.node/add-slave! master slave2 )&quot; &quot;(roar.node.node/write! master \&quot;key\&quot; \&quot;test1\&quot;)&quot; &quot;(= (roar.node.node/read slave1 \&quot;key\&quot; ) \&quot;test\&quot;)&quot; &quot;(= (roar.node.node/read slave2 \&quot;key\&quot; ) \&quot;test\&quot;)&quot; &quot;(= (roar.node.node/read master \&quot;key\&quot; ) \&quot;test\&quot;)&quot; &quot;/home/sapotero/clojure/roar/src/roar/core.clj&quot; &quot;-&gt; master .write! \&quot;s\&quot; \&quot;ss\&quot;&quot; &quot;(-&gt; .write! master \&quot;s\&quot; \&quot;ss\&quot;)&quot; &quot;()&quot; &quot;-&gt; .write! master \&quot;s\&quot; \&quot;ss\&quot;&quot; &quot;(roar.core/write! master \&quot;s\&quot; \&quot;ss\&quot;)&quot; &quot;(roar.core/write! master \&quot;s\&quot; \&quot;sss\&quot;)&quot; &quot;(roar.core/write! master \&quot;ss\&quot; \&quot;sss\&quot;)&quot; &quot;roar.core/read! master \&quot;ss\&quot;&quot; &quot;(roar.core/read! master \&quot;ss\&quot;)&quot; &quot;(roar.core/add-slave master slave)&quot; &quot;(def master (roar.core/master-node \&quot;master\&quot;))&quot; &quot;(:store slave)&quot; &quot;(roar.core/write! slave \&quot;key\&quot; \&quot;value\&quot;)&quot; &quot;(def \n  master (roar.core/master-node \&quot;master\&quot;))&quot; &quot;(def slave (roar.core/slave-node \&quot;slave\&quot; master))&quot; &quot;slave&quot; &quot;(roar.core/add-slave! master slave)&quot; &quot;(roar.core/write! master \&quot;key\&quot; \&quot;value\&quot;)&quot; &quot;(.store master)&quot; &quot;(master :store)&quot; &quot;(:store master)&quot; &quot;-&gt; master .store&quot; &quot;-&gt; master :store&quot; &quot;-&gt; master \nstore&quot; &quot;(:slaves)&quot; &quot;(:slaves slave)&quot; &quot;(:slaves master)&quot; &quot;master&quot; &quot;(roar.core/read roar.core/master \&quot;key\&quot;)&quot; &quot;(roar.core/read roar.core/slave1 \&quot;key\&quot;)&quot; &quot;(roar.core/read roar.core/slave2 \&quot;key\&quot;)&quot; &quot;(roar.core/write! roar.core/slave1 \&quot;keys\&quot; \&quot;kess\&quot;)&quot; &quot;(roar.core/read roar.core/slave1 \&quot;keys\&quot;)&quot; &quot;(roar.core/read roar.core/slave2 \&quot;keys\&quot;)&quot; &quot;(roar.core/read roar.core/master \&quot;keys\&quot;)&quot; &quot;(roar.core/write! roar.core/slave1 \&quot;keyss\&quot; \&quot;kess\&quot;)&quot; &quot;(roar.core/read roar.core/master \&quot;keyss\&quot;)&quot; &quot;(roar.core/read roar.core/slave1 \&quot;keyss\&quot;)&quot; &quot;(read faker.internet)&quot; &quot;(require faker)&quot; &quot;(require 'faker)&quot; &quot;(roar.core/n)&quot; &quot;(= (roar.core/read! master \&quot;key\&quot; ) \&quot;test\&quot;)&quot; &quot;(roar.core/add-slave! master slave1 )\n(roar.core/add-slave! master slave2 )&quot; &quot;\n(roar.core/write! master \&quot;key\&quot; \&quot;test23\&quot;)&quot; &quot;\nmaster&quot; &quot;roar.core/master&quot; &quot;(:store roar.core/master)&quot; &quot;(:slaves roar.core/master)&quot; &quot;(= (roar.core/read! roar.core/master \&quot;key\&quot; ) \&quot;test\&quot;)&quot; &quot;(= (roar.core/read! roar.core/master \&quot;key\&quot; ) \&quot;test23\&quot;)&quot; &quot;(= (roar.core/read! roar.core/slave1 \&quot;key\&quot; ) \&quot;test23\&quot;)&quot; &quot;(= (roar.core/read! roar.core/slave2 \&quot;key\&quot; ) \&quot;test23\&quot;)&quot; &quot;(roar.core/match-value! roar.core/master-node \&quot;key\&quot;)&quot; &quot;(roar.core/match-key! roar.core/master-node \&quot;key\&quot;)&quot; &quot;(roar.core/match-key! roar.core/master \&quot;key\&quot;)&quot; &quot;(roar.core/match-value! roar.core/master \&quot;key\&quot;)&quot; &quot;(roar.core/match-value! roar.core/slave1 \&quot;key\&quot;)&quot; &quot;(roar.core/find-in-values! roar.core/master \&quot;key\&quot;)&quot;], :remote []}}</component>
</project>